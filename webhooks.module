<?php

/**
 * @file
 * Contains webhooks.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\Entity\User;
use Drupal\webhooks\Webhook;

/**
 * Implements hook_help().
 */
function webhooks_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.webhooks':
      $output = '';
      $output .= '<h3>' . t('Webhooks') . '</h3>';
      $output .= '<p>' . t('Webhooks module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_insert().
 */
function webhooks_entity_insert(EntityInterface $entity) {
  /** @var \Drupal\webhooks\WebhooksService $webhooks_service */
  $webhooks_service = \Drupal::service('webhooks.service');
  /** @var \Symfony\Component\Serializer\Serializer $serializer */
  $serializer = \Drupal::service('serializer');

  $event = implode(':', ['entity', $entity->getEntityType()->id(), 'create']);
  $user = User::load(\Drupal::currentUser()->id());
  $webhook_configs = $webhooks_service->loadMultipleByEvent($event);

  /** @var \Drupal\webhooks\Entity\WebhookConfig $webhook_config */
  foreach ($webhook_configs as $webhook_config) {
    $webhook = new Webhook(
      [
        'event' => $event,
        'account' => $serializer->normalize($user),
        'entity' => $serializer->normalize($entity),
      ],
      [],
      $event,
      $webhook_config->getContentType()
    );
    $webhooks_service->send($webhook_config, $webhook);
  }
}

/**
 * Implements hook_entity_update().
 */
function webhooks_entity_update(EntityInterface $entity) {
  /** @var \Drupal\webhooks\WebhooksService $webhooks_service */
  $webhooks_service = \Drupal::service('webhooks.service');
  /** @var \Symfony\Component\Serializer\Serializer $serializer */
  $serializer = \Drupal::service('serializer');

  $event = implode(':', ['entity', $entity->getEntityType()->id(), 'update']);
  $user = User::load(\Drupal::currentUser()->id());
  $webhook_configs = $webhooks_service->loadMultipleByEvent($event);

  /** @var \Drupal\webhooks\Entity\WebhookConfig $webhook_config */
  foreach ($webhook_configs as $webhook_config) {
    $webhook = new Webhook(
      [
        'event' => $event,
        'account' => $serializer->normalize($user),
        'entity' => $serializer->normalize($entity),
      ],
      [],
      $event,
      $webhook_config->getContentType()
    );
    $webhooks_service->send($webhook_config, $webhook);
  }
}

/**
 * Implements hook_entity_delete().
 */
function webhooks_entity_delete(EntityInterface $entity) {
  /** @var \Drupal\webhooks\WebhooksService $webhooks_service */
  $webhooks_service = \Drupal::service('webhooks.service');
  /** @var \Symfony\Component\Serializer\Serializer $serializer */
  $serializer = \Drupal::service('serializer');

  $event = implode(':', ['entity', $entity->getEntityType()->id(), 'delete']);
  $user = User::load(\Drupal::currentUser()->id());
  $webhook_configs = $webhooks_service->loadMultipleByEvent($event);

  /** @var \Drupal\webhooks\Entity\WebhookConfig $webhook_config */
  foreach ($webhook_configs as $webhook_config) {
    $webhook = new Webhook(
      [
        'event' => $event,
        'account' => $serializer->normalize($user),
        'entity' => $serializer->normalize($entity),
      ],
      [],
      $event,
      $webhook_config->getContentType()
    );
    $webhooks_service->send($webhook_config, $webhook);
  }
}
